{"code":"import { Machine } from 'xstate';\r\nexport default (function (config, actions) {\r\n    var machine = Machine(config);\r\n    var currentState = machine.initialState.value;\r\n    var extendedState = {};\r\n    var dispatch = function (event) {\r\n        var nextState = machine.transition(currentState, event, extendedState);\r\n        nextState.actions\r\n            .map(function (action) { return typeof action === 'string' ? action : action.type; })\r\n            .filter(function (key) { return actions && actions[key]; })\r\n            .forEach(function (key) { return actions[key](event, dispatch); });\r\n        currentState = nextState.value;\r\n    };\r\n    return {\r\n        currentState: currentState,\r\n        dispatch: dispatch,\r\n        machine: machine,\r\n        state: extendedState,\r\n    };\r\n});\r\n//# sourceMappingURL=index.js.map","map":{"version":3,"file":"index.js","sourceRoot":"","sources":["src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAyBjC,gBAAe,UAAC,MAAqB,EAAE,OAAuB;IAC5D,IAAM,OAAO,GAAoC,OAAO,CAAC,MAAM,CAAC,CAAC;IAEjE,IAAI,YAAY,GAAe,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC;IAE1D,IAAM,aAAa,GAAG,EAAE,CAAC;IAEzB,IAAM,QAAQ,GAAG,UAAC,KAAY;QAC5B,IAAM,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;QAEzE,SAAS,CAAC,OAAO;aACd,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAjD,CAAiD,CAAC;aAChE,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,EAAvB,CAAuB,CAAC;aACtC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,OAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAElD,YAAY,GAAG,SAAS,CAAC,KAAK,CAAC;IACjC,CAAC,CAAC;IAEF,MAAM,CAAC;QACL,YAAY,cAAA;QACZ,QAAQ,UAAA;QACR,OAAO,SAAA;QACP,KAAK,EAAE,aAAa;KACrB,CAAC;AACJ,CAAC,EAAC"},"dts":{"name":"/Users/andy/dev/statex/index.d.ts","text":"import { Event, ParallelMachine, StandardMachine, StateValue, MachineConfig } from 'xstate/lib/types';\r\nexport interface ExtendedState {\r\n    [propName: string]: any;\r\n}\r\nexport interface StateXAction {\r\n    (event: Event, state: ExtendedState): any;\r\n}\r\nexport interface StateXActions {\r\n    [propName: string]: StateXAction;\r\n}\r\ndeclare const _default: (config: MachineConfig, actions?: StateXActions | undefined) => {\r\n    currentState: StateValue;\r\n    dispatch: (event: Event) => void;\r\n    machine: StandardMachine | ParallelMachine;\r\n    state: {};\r\n};\r\nexport default _default;\r\n"}}
